{"version":3,"sources":["ColorArray.js","App.js","reportWebVitals.js","index.js"],"names":["COLOR_ARRAY","quoteDBUrl","App","useState","quote","setQuote","author","setAuthor","quoteArray","setQuoteArray","accentColor","setAccentColor","fetchQuotes","url","a","fetch","response","json","parseJSON","quotes","useEffect","setRandomNumber","className","style","backgroundColor","color","id","href","encodeURI","icon","faTwitter","onClick","rand","Math","floor","random","length","getRandomQuote","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQA0CiBA,G,MA1CG,CAClB,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClE,UAAW,UAAW,UAAW,SAAU,UAAW,UAAW,UACjE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClE,UAAW,UAAW,UAAW,SAAU,UAAW,UAAW,UACjE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClE,UAAW,UAAW,UAAW,SAAU,UAAW,UAAW,UACjE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClE,UAAW,UAAW,UAAW,SAAU,UAAW,UAAW,UACjE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClE,UAAW,UAAW,UAAW,SAAU,UAAW,UAAW,UACjE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClE,UAAW,SAAU,UAAW,UAAW,UAAW,UAAW,UACjE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClE,UAAW,SAAU,UAAW,UAAW,UAAW,UAAW,UACjE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClE,UAAW,SAAU,UAAW,UAAW,UAAW,UAAW,UACjE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAClE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAClE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,Y,uBChChEC,EAAa,yIAsEFC,MApEf,WACE,MAA0BC,mBAAS,+JAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,gBAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAoCJ,mBAAS,MAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAEA,EAAsCN,mBAAS,WAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KAEMC,EAAW,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACKC,MAAMF,GADX,cACZG,EADY,gBAEMA,EAASC,OAFf,OAEZC,EAFY,OAGlBT,EAAcS,EAAUC,QAHN,2CAAH,sDAMjBC,qBAAU,WACRR,EAAYX,KACX,CAACA,IAGJ,MAAwCE,mBAAS,GAAjD,mBAAqBkB,GAArB,WASA,OACE,qBAAKC,UAAU,MAAf,SACE,wBACEA,UAAU,aACVC,MAAO,CAACC,gBAAiBd,EAAae,MAAOf,GAF/C,SAIE,sBAAKgB,GAAG,YAAYH,MAAO,CAACE,MAAOf,GAAnC,UACE,qBAAIgB,GAAG,OAAP,cAIItB,EAJJ,OAMA,sBAAKsB,GAAG,SAAR,eACKpB,KAGL,sBAAKgB,UAAU,SAAf,UACE,mBACEI,GAAG,cAEHC,KAAMC,UAAU,4CAAD,OAA6CxB,EAA7C,YAAsDE,EAAtD,oBACfiB,MAAO,CAACC,gBAAiBd,GAJ3B,SAME,cAAC,IAAD,CAAiBmB,KAAMC,QAGzB,wBACEJ,GAAG,YACHH,MAAO,CAACC,gBAAiBd,GACzBqB,QAAS,kBAtCE,WACrB,IAAIC,EAAOC,KAAKC,MAAMD,KAAKE,SAAW3B,EAAW4B,QACjDf,EAAgBW,GAChBrB,EAAeX,EAAYgC,IAC3B3B,EAASG,EAAWwB,GAAM5B,OAC1BG,EAAUC,EAAWwB,GAAM1B,QAiCF+B,IAHjB,kCCpDGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.86485858.chunk.js","sourcesContent":["const COLOR_ARRAY = [\n  \"#63b598\", \"#ce7d78\", \"#ea9e70\", \"#a48a9e\", \"#c6e1e8\", \"#648177\", \"#0d5ac1\",\n  \"#f205e6\", \"#1c0365\", \"#14a9ad\", \"#4ca2f9\", \"#a4e43f\", \"#d298e2\", \"#6119d0\",\n  \"#d2737d\", \"#c0a43c\", \"#f2510e\", \"#651be6\", \"#79806e\", \"#61da5e\", \"#cd2f00\",\n  \"#9348af\", \"#01ac53\", \"#c5a4fb\", \"#996635\", \"#b11573\", \"#4bb473\", \"#75d89e\",\n  \"#2f3f94\", \"#2f7b99\", \"#da967d\", \"#34891f\", \"#b0d87b\", \"#ca4751\", \"#7e50a8\",\n  \"#c4d647\", \"#e0eeb8\", \"#11dec1\", \"#289812\", \"#566ca0\", \"#ffdbe1\", \"#2f1179\",\n  \"#935b6d\", \"#916988\", \"#513d98\", \"#aead3a\", \"#9e6d71\", \"#4b5bdc\", \"#0cd36d\",\n  \"#250662\", \"#cb5bea\", \"#228916\", \"#ac3e1b\", \"#df514a\", \"#539397\", \"#880977\",\n  \"#f697c1\", \"#ba96ce\", \"#679c9d\", \"#c6c42c\", \"#5d2c52\", \"#48b41b\", \"#e1cf3b\",\n  \"#5be4f0\", \"#57c4d8\", \"#a4d17a\", \"#225b8\", \"#be608b\", \"#96b00c\", \"#088baf\",\n  \"#f158bf\", \"#e145ba\", \"#ee91e3\", \"#05d371\", \"#5426e0\", \"#4834d0\", \"#802234\",\n  \"#6749e8\", \"#0971f0\", \"#8fb413\", \"#b2b4f0\", \"#c3c89d\", \"#c9a941\", \"#41d158\",\n  \"#fb21a3\", \"#51aed9\", \"#5bb32d\", \"#807fb\", \"#21538e\", \"#89d534\", \"#d36647\",\n  \"#7fb411\", \"#0023b8\", \"#3b8c2a\", \"#986b53\", \"#f50422\", \"#983f7a\", \"#ea24a3\",\n  \"#79352c\", \"#521250\", \"#c79ed2\", \"#d6dd92\", \"#e33e52\", \"#b2be57\", \"#fa06ec\",\n  \"#1bb699\", \"#6b2e5f\", \"#64820f\", \"#1c271\", \"#21538e\", \"#89d534\", \"#d36647\",\n  \"#7fb411\", \"#0023b8\", \"#3b8c2a\", \"#986b53\", \"#f50422\", \"#983f7a\", \"#ea24a3\",\n  \"#79352c\", \"#521250\", \"#c79ed2\", \"#d6dd92\", \"#e33e52\", \"#b2be57\", \"#fa06ec\",\n  \"#1bb699\", \"#6b2e5f\", \"#64820f\", \"#1c271\", \"#9cb64a\", \"#996c48\", \"#9ab9b7\",\n  \"#06e052\", \"#e3a481\", \"#0eb621\", \"#fc458e\", \"#b2db15\", \"#aa226d\", \"#792ed8\",\n  \"#73872a\", \"#520d3a\", \"#cefcb8\", \"#a5b3d9\", \"#7d1d85\", \"#c4fd57\", \"#f1ae16\",\n  \"#8fe22a\", \"#ef6e3c\", \"#243eeb\", \"#1dc18\", \"#dd93fd\", \"#3f8473\", \"#e7dbce\",\n  \"#421f79\", \"#7a3d93\", \"#635f6d\", \"#93f2d7\", \"#9b5c2a\", \"#15b9ee\", \"#0f5997\",\n  \"#409188\", \"#911e20\", \"#1350ce\", \"#10e5b1\", \"#fff4d7\", \"#cb2582\", \"#ce00be\",\n  \"#32d5d6\", \"#17232\", \"#608572\", \"#c79bc2\", \"#00f87c\", \"#77772a\", \"#6995ba\",\n  \"#fc6b57\", \"#f07815\", \"#8fd883\", \"#060e27\", \"#96e591\", \"#21d52e\", \"#d00043\",\n  \"#b47162\", \"#1ec227\", \"#4f0f6f\", \"#1d1d58\", \"#947002\", \"#bde052\", \"#e08c56\",\n  \"#28fcfd\", \"#bb09b\", \"#36486a\", \"#d02e29\", \"#1ae6db\", \"#3e464c\", \"#a84a8f\",\n  \"#911e7e\", \"#3f16d9\", \"#0f525f\", \"#ac7c0a\", \"#b4c086\", \"#c9d730\", \"#30cc49\",\n  \"#3d6751\", \"#fb4c03\", \"#640fc1\", \"#62c03e\", \"#d3493a\", \"#88aa0b\", \"#406df9\",\n  \"#615af0\", \"#4be47\", \"#2a3434\", \"#4a543f\", \"#79bca0\", \"#a8b8d4\", \"#00efd4\",\n  \"#7ad236\", \"#7260d8\", \"#1deaa7\", \"#06f43a\", \"#823c59\", \"#e3d94c\", \"#dc1c06\",\n  \"#f53b2a\", \"#b46238\", \"#2dfff6\", \"#a82b89\", \"#1a8011\", \"#436a9f\", \"#1a806a\",\n  \"#4cf09d\", \"#c188a2\", \"#67eb4b\", \"#b308d3\", \"#fc7e41\", \"#af3101\", \"#ff065\",\n  \"#71b1f4\", \"#a2f8a5\", \"#e23dd0\", \"#d3486d\", \"#00f7f9\", \"#474893\", \"#3cec35\",\n  \"#1c65cb\", \"#5d1d0c\", \"#2d7d2a\", \"#ff3420\", \"#5cdd87\", \"#a259a4\", \"#e4ac44\",\n  \"#1bede6\", \"#8798a4\", \"#d7790f\", \"#b2c24f\", \"#de73c2\", \"#d70a9c\", \"#25b67\",\n  \"#88e9b8\", \"#c2b0e2\", \"#86e98f\", \"#ae90e2\", \"#1a806b\", \"#436a9e\", \"#0ec0ff\",\n  \"#f812b3\", \"#b17fc9\", \"#8d6c2f\", \"#d3277a\", \"#2ca1ae\", \"#9685eb\", \"#8a96c6\",\n  \"#dba2e6\", \"#76fc1b\", \"#608fa4\", \"#20f6ba\", \"#07d7f6\", \"#dce77a\", \"#77ecca\"]\n\n  export default COLOR_ARRAY","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport COLOR_ARRAY from './ColorArray'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons'\n//  import {faQuoteLeft} from '@fortawesome/free-solid-svg-icons'\n\n\nlet quoteDBUrl = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\n\nfunction App() {\n  const [quote, setQuote] = useState(\"When I stand before God at the end of my life, I would hope that I would not have a single bit of talent left and could say, I used everything you gave me.\")\n  const [author, setAuthor] = useState(\"Erma Bombeck\");\n  const [quoteArray, setQuoteArray] = useState(null);\n\n  const [accentColor, setAccentColor] = useState(\"#916988\");\n\n  const fetchQuotes = async (url) => {\n    const response = await fetch(url);\n    const parseJSON = await response.json()\n    setQuoteArray(parseJSON.quotes);\n  }\n\n  useEffect(() => {\n    fetchQuotes(quoteDBUrl)\n  }, [quoteDBUrl]\n  )\n\n  const [randomNumber, setRandomNumber] = useState(0);\n  const getRandomQuote = () => {\n    let rand = Math.floor(Math.random() * quoteArray.length);\n    setRandomNumber(rand);\n    setAccentColor(COLOR_ARRAY[rand])\n    setQuote(quoteArray[rand].quote);\n    setAuthor(quoteArray[rand].author);\n  }\n\n  return (\n    <div className=\"App\">\n      <header \n        className=\"App-header\" \n        style={{backgroundColor: accentColor, color: accentColor }}\n      >\n        <div id=\"quote-box\" style={{color: accentColor}}>\n          <h2 id=\"text\">\n            {/* <span id=\"quote-icon\">\n              <FontAwesomeIcon icon={faQuoteLeft} />\n            </span> */}\n            \"{quote}\"\n          </h2>\n          <div id=\"author\">\n            - {author}\n          </div>\n          \n          <div className=\"button\">\n            <a \n              id=\"tweet-quote\" \n              \n              href={encodeURI(`http://www.twitter.com/intent/tweet?text=${quote} ${author}&hashtags=quote`)} \n              style={{backgroundColor: accentColor}}\n            >\n              <FontAwesomeIcon icon={faTwitter} />\n            </a>\n\n            <button \n              id=\"new-quote\" \n              style={{backgroundColor: accentColor}}\n              onClick={() => getRandomQuote()}\n            >\n              New Quote\n            </button>\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}